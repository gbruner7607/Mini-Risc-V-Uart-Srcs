
hazard.elf:     file format elf32-littleriscv


Disassembly of section .text:

00010000 <_start>:
   10000:	00001117          	auipc	sp,0x1
   10004:	10010113          	addi	sp,sp,256 # 11100 <_sp0>
   10008:	00000097          	auipc	ra,0x0
   1000c:	00c08093          	addi	ra,ra,12 # 10014 <_endloop>
   10010:	04c000ef          	jal	ra,1005c <main>

00010014 <_endloop>:
   10014:	0000006f          	j	10014 <_endloop>

00010018 <nothing>:
   10018:	ff010113          	addi	sp,sp,-16
   1001c:	00812623          	sw	s0,12(sp)
   10020:	01010413          	addi	s0,sp,16
   10024:	00100793          	li	a5,1
   10028:	00078513          	mv	a0,a5
   1002c:	00c12403          	lw	s0,12(sp)
   10030:	01010113          	addi	sp,sp,16
   10034:	00008067          	ret

00010038 <res>:
   10038:	fe010113          	addi	sp,sp,-32
   1003c:	00812e23          	sw	s0,28(sp)
   10040:	02010413          	addi	s0,sp,32
   10044:	fea42623          	sw	a0,-20(s0)
   10048:	fec42783          	lw	a5,-20(s0)
   1004c:	00078513          	mv	a0,a5
   10050:	01c12403          	lw	s0,28(sp)
   10054:	02010113          	addi	sp,sp,32
   10058:	00008067          	ret

0001005c <main>:
   1005c:	fe010113          	addi	sp,sp,-32            // Sets stack pointer to end of stack. (allocates 4 words on the stack).
   10060:	00112e23          	sw	ra,28(sp)               // Stores return address at start of stack.
   10064:	00812c23          	sw	s0,24(sp)               // Stores frame pointer at 2nd from start of stack.
   10068:	02010413          	addi	s0,sp,32             // Sets frame pointer to start of stack.

   1006c:	00100793          	li	a5,1                    // int num = 1; (temp register).
   10070:	fef42623          	sw	a5,-20(s0)              // Stores num into memory.

   10074:	fe042423          	sw	zero,-24(s0)            // Initializes i in memory to 0.

   10078:	fa1ff0ef          	jal	ra,10018 <nothing>   // int temp = nothing();
   1007c:	fea42223          	sw	a0,-28(s0)              // Stores int temp into memory.

   10080:	fe042423          	sw	zero,-24(s0)            // Initializes i in memory to 0.
   10084:	0180006f          	j	1009c <main+0x40>       // Check conditional of for loop before starting.
   10088:	00200793          	   li	a5,2                    // num = 2; (temp register)
   1008c:	fef42623          	   sw	a5,-20(s0)              // Stores num into memory.

   10090:	fe842783          	   lw	a5,-24(s0)              // Loads i into temp register to be modified.
   10094:	00178793          	   addi	a5,a5,1              // i++
   10098:	fef42423          	   sw	a5,-24(s0)              // Stores i into memory.
   1009c:	fe842783          	   lw	a5,-24(s0)              // Loads i into temp register to be checked.
   100a0:	fef054e3          	blez	a5,10088 <main+0x2c> // Keep looping if i <= 0.

   100a4:	fec42503          	lw	a0,-20(s0)              // Sets num as argument for res.
   100a8:	f91ff0ef          	jal	ra,10038 <res>       // res(num);

   100ac:	fea42023          	sw	a0,-32(s0)              // int result = res(num);
   100b0:	00000793          	li	a5,0                    // Loads 0 in return 0;
   100b4:	00078513          	mv	a0,a5                   // ""
   100b8:	01c12083          	lw	ra,28(sp)               // 
   100bc:	01812403          	lw	s0,24(sp)

   100c0:	02010113          	addi	sp,sp,32
   100c4:	00008067          	ret
